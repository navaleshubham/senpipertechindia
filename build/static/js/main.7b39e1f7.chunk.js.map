{"version":3,"sources":["components/home/home.componet.js","App.js","serviceWorker.js","index.js"],"names":["home","state","email","TextField","phone","rating","name","errorsphone","erroremail","errorsname","errorsrating","errorstextfield","onChange","bind","onSubmit","e","this","setState","target","value","preventDefault","indexOf","console","log","di","doc","JSON","parse","localStorage","getItem","push","setItem","stringify","alert","data","window","history","go","className","id","role","data-toggle","href","aria-controls","aria-selected","aria-labelledby","style","color","width","type","maxWidth","maxHeight","padding","src","alt","aria-describedby","onClick","backgroundColor","scope","map","numList","i","key","Component","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b39e1f7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './home.css'\nexport default class home extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            TextField: '',\n            phone: '',\n            rating: '',\n            name: '',\n            errorsphone: '',\n            erroremail: '',\n            errorsname: '',\n            errorsrating: '',\n            errorstextfield:''\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    onSubmit(e) {\n        e.preventDefault()\n        if (this.state.email.indexOf('@') === -1 || this.state.email === '' || this.state.email.indexOf('.') === -1) {\n            this.setState({\n                erroremail: 'Error: Please check the email'\n            })\n        }\n        if (this.state.name === '' || this.state.phone === '' || this.state.rating === '' || this.state.TextField==='') {\n            if (this.state.TextField === '') {\n                this.setState({\n                    errorstextfield: 'Error: This is a mandatory field'\n                })\n            }\n            if (this.state.name === '') {\n                this.setState({\n                    errorsname: 'Error: This is a mandatory field'\n                })\n            }\n            if (this.state.phone === '') {\n                this.setState({\n                    errorsphone: 'Error: This is a mandatory field'\n                })\n            }\n            if (this.state.rating === '') {\n                this.setState({\n                    errorsrating: 'Error: This is a mandatory field'\n                })\n            }\n            console.log(this.state)\n        }\n        else {\n            var di = {}\n            var doc = []\n            doc = JSON.parse(localStorage.getItem('feedbacks'))\n            if (doc === null) {\n                doc = []\n            }\n            di.TextField = this.state.TextField\n            di.email = this.state.email\n            di.phone = this.state.phone\n            di.rating = this.state.rating\n            di.name = this.state.name\n            console.log(di)\n            doc.push(di)\n            localStorage.setItem('feedbacks', JSON.stringify(doc))\n            alert('Thanks for the Feedback!')\n            this.data = doc\n            window.history.go(0)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                <nav>\n                    <div className=\"nav nav-tabs bg-white\" id=\"nav-tab\" role=\"tablist\">\n                        <a className=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Feedback Form</a>\n                        <a className=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">All Feedbacks</a>\n                    </div>\n                </nav>\n                <div className=\"tab-content\" id=\"nav-tabContent\">\n                    <div className=\"tab-pane fade show active pb-4\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n                            <div>\n                                <h3 className='h4 mt-3 ml-lg-4' style={{ color: 'teal' }}>Aromatic Bar</h3>\n                                <p className='ml-lg-4' style={{ color: \"grey\" }}>We are committed to providing you with the best dining experience possible, so we welcome your comments. Please fill out this questionnaire. Thank you</p>\n                            </div>\n                            <div className='container bg-white mt-3 form-height'>\n                                <div className='row pt-3'>\n                                    <div className='col-sm-12 col-md-6'>\n                                        <label>Text</label>\n\n                                        <div className=\"input-group\" style={{ width: '90%' }}>\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\" >Hello</span>\n                                            </div>\n                                            <input type=\"text\" className=\"form-control\" name='TextField' onChange={this.onChange} ></input>\n                                        </div>\n                                        {this.state.errorsname !== '' ? <span style={{ color: \"red\" }}>{this.state.errorsname}</span> : null}\n                                    </div>\n                                    <div className='col-sm-12 col-md-6'>\n                                        <label>Email</label>\n                                        <br></br>\n                                        <div className=\"input-group\" style={{ width: '90%' }}>\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\">@</span>\n                                            </div>\n                                            <input className=\"form-control\" name='email' type='email' onChange={this.onChange}></input>\n                                        </div>\n                                        {this.state.erroremail !== '' ? <span style={{ color: \"red\" }}>{this.state.erroremail}</span> : null}\n                                    </div>\n                                </div>\n                                <div className='row pt-3'>\n                                    <div className='col-sm-12 col-md-6'>\n                                        <label>Phone</label>\n                                        <br></br>\n                                        <div className=\"input-group\" style={{ width: '90%' }}>\n                                            <div className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\" id=\"basic-addon1\" style={{ maxWidth: '50px' , maxHeight: '33px', padding: '0px' }}><img style={{ maxWidth: '50px' , maxHeight: '33px', padding: '0px' }} src='https://cdn.britannica.com/97/1597-004-05816F4E/Flag-India.jpg' alt=\"    +91\"></img></span>\n                                            </div>\n                                            <input type=\"number\" className=\"form-control\" name='phone' onChange={this.onChange} aria-describedby=\"basic-addon1\"></input>\n                                        </div>\n                                        {this.state.errorsphone !== '' ? <span style={{ color: \"red\" }}>{this.state.errorsphone}</span> : null}\n                                    </div>\n                                    <div className='col-sm-12 col-md-6'>\n                                        <label>Rating</label>\n                                        <br></br>\n                                        <div className='row ml-1'>\n                                            <input name='rating' type='radio' value='Excellent' onChange={this.onChange}></input>\n                                            <label className='px-2 pr-md-5  pl-md-3 text-center'>Excellent</label>\n                                            <input name='rating' type='radio' value='Good' onChange={this.onChange}></input>\n                                            <label className='px-2 pr-md-5 pl-md-3'>Good</label>\n                                            <input name='rating' type='radio' value='Fair' onChange={this.onChange}></input>\n                                            <label className='px-2 pr-md-5 pl-md-3'>Fair</label>\n                                            <input name='rating' type='radio' value='Bad' onChange={this.onChange}></input>\n                                            <label className='px-2 pr-md-5 pl-md-3'>Bad</label>\n                                        </div>\n                                        {this.state.errorsrating !== '' ? <span style={{ color: \"red\" }} className='ml-2'>{this.state.errorsrating}</span> : null}\n                                    </div>\n                                </div>\n                                <div className='row pt-3'>\n                                    <div className='col-sm-12 col-md-6 mt-5'>\n                                        <label>Name</label>\n                                        <br></br>\n                                        {/*<input name='name' onChange={this.onChange} style={{ width: '90%' }}></input>*/}\n                                        <div className=\"input-group\" style={{ width: '90%' }}>\n\n                                            <input type=\"text\" className=\"form-control\" name='name' onChange={this.onChange} ></input>\n                                        </div>\n                                        <br></br>\n                                        {this.state.errorsname !== '' ? <span style={{ color: \"red\" }}>{this.state.errorsname}</span> : null}\n                                    </div>\n                                </div>\n                                <div className='d-flex justify-content-between align-bottom submitbtn'>\n                                    <div></div>\n                                    <button className='btn btn-success border-3 mb-5' onClick={this.onSubmit}>\n                                        Submit\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    <div className=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n                        <div>\n                            <h2 className='h2 mt-3'>All Feedbacks</h2>\n                            <div className='table-responsive'>\n                                <table className=\"table container mt-5\">\n                                    <thead style={{ backgroundColor: '#C4AFEE' }}>\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">Name</th>\n                                            <th scope=\"col\">Email</th>\n                                            <th scope=\"col\">Phone</th>\n                                            <th scope=\"col\">Rating</th>\n                                            <th scope=\"col\">Text</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className='bg-white'>\n                                        {localStorage.getItem('feedbacks') ?\n                                            <>{\n                                                JSON.parse(localStorage.getItem('feedbacks')).map((numList, i) => (\n                                                    <tr key={i}>\n                                                        <td> {i + 1}</td>\n                                                        <td> {numList.name}</td>\n                                                        <td> {numList.email}</td>\n                                                        <td> {numList.phone}</td>\n                                                        <td> {numList.rating}</td>\n                                                        <td> {numList.TextField}</td>\n                                                    </tr>\n                                                ))\n                                            }</> : null\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport home from './components/home/home.componet';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Switch>\n                    <Route path='/' exact component={home}></Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(\n  \n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}